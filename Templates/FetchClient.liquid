{% if HasOperations -%}

{% if HasExtensionCode -%}
    {{ ExtensionCode }}
{% endif -%}


{% comment %}
    PATH PARAMETER DECLARATIONS
{% endcomment -%}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.PathParameters.first -%}
type {{operation.OperationName}}{{ Class }}Params = {
{% for parameter in operation.PathParameters -%}
    {{ parameter.VariableName }}{% if GenerateOptionalParameters and parameter.IsOptional %}?{% endif %}: {{ parameter.Type }}{{ parameter.TypePostfix }}
{% endfor -%}
};
{% endif -%}
{% endfor -%}


{% comment %}
    GET
{% endcomment -%}
{% assign has_get = false %}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "get" -%}
{% assign has_get = true %}

{% template Client.Method.Documentation -%}
export function get{{ Class }}(info: "/{{ operation.Path }}"{%if operation.PathParameters.first %}, init: TypedRequestInit<{{operation.OperationName}}{{ Class }}Params>{%else%}, init?: RequestInit{%endif%}): Promise<{{ operation.ResultType }}>;

{% endif -%}
{% endfor -%}

{% if has_get -%}
/** GET {{Class}} */
export function get{{ Class }}(info: string, init?: TypedRequestInit): Promise<unknown> {
    // return apiBase("GET", info, init, getModel(init));
    throw new Error("Not implemented");
}
{% endif -%}


{% comment %}
    HEAD
{% endcomment -%}
{% assign has_head = false %}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "head" -%}
{% assign has_head = true %}

{% template Client.Method.Documentation -%}
export function head{{ Class }}(info: "/{{ operation.Path }}"{%if operation.PathParameters.first %}, init: TypedRequestInit<{{operation.OperationName}}{{ Class }}Params>{%else%}, init?: RequestInit{%endif%}): Promise<{{ operation.ResultType }}>;

{% endif -%}
{% endfor -%}

{% if has_head -%}
/** HEAD {{Class}} */
export function head{{ Class }}(info: string, init?: TypedRequestInit): Promise<unknown> {
    // return apiBase("HEAD", info, init, getModel(init));
    throw new Error("Not implemented");
}
{% endif -%}


{% comment %}
    DELETE
{% endcomment -%}
{% assign has_delete = false %}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "delete" -%}
{% assign has_delete = true %}

{% template Client.Method.Documentation -%}
export function delete{{ Class }}(info: "/{{ operation.Path }}"{%if operation.PathParameters.first %}, init: TypedRequestInit<{{operation.OperationName}}{{ Class }}Params>{%else%}, init?: RequestInit{%endif%}): Promise<{{ operation.ResultType }}>;

{% endif -%}
{% endfor -%}

{% if has_delete -%}
/** DELETE {{Class}} */
export function delete{{ Class }}(info: string, init?: TypedRequestInit): Promise<unknown> {
    // return apiBase("DELETE", info, init, getModel(init));
    throw new Error("Not implemented");
}
{% endif -%}


{% comment %}
    PUT -- JSON
{% endcomment -%}
{% assign has_put_json = false -%}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "put" and operation.HasFormParameters == false -%}
{% assign has_put_json = true -%}

{% template Client.Method.Documentation -%}
export function put{{ Class }}(info: "/{{ operation.Path }}"{%if operation.PathParameters.first %}, params: {{operation.OperationName}}{{ Class }}Params{%elseif operation.HasContent%}, params: null{%endif%}{%if operation.HasContent%}, init: TypedRequestInit<{{operation.ContentParameter.Type}}>{%endif%}): Promise<{{ operation.ResultType }}>;

{% endif -%}
{% endfor -%}

{% if has_put_json -%}

/** PUT {{Class}} */
export function put{{ Class }}(info: string, params?: object, init?: TypedRequestInit): Promise<unknown> {
    // return apiBase("PUT", info, init, getModel(init));
    throw new Error("Not implemented");
}
{% endif -%}


{% comment %}
    POST -- JSON
{% endcomment -%}
{% assign has_post_json = false -%}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "post" and operation.HasFormParameters == false -%}
{% assign has_post_json = true -%}

{% template Client.Method.Documentation -%}
export function post{{ Class }}(info: "/{{ operation.Path }}"{%if operation.PathParameters.first %}, params: {{operation.OperationName}}{{ Class }}Params{%elseif operation.HasContent%}, params: null{%endif%}{%if operation.HasContent%}, init: TypedRequestInit<{{operation.ContentParameter.Type}}>{%endif%}): Promise<{{ operation.ResultType }}>;

{% endif -%}
{% endfor -%}

{% if has_post_json -%}

/** POST {{Class}} */
export function post{{ Class }}(info: string, params?: object, init?: TypedRequestInit): Promise<unknown> {
    // return apiBase("POST", info, init, getModel(init));
    throw new Error("Not implemented");
}
{% endif -%}

// TODO - {{ Class }}
// POST  -- FORM
// PUT   -- FORM
// PATCH -- JSON
// PATCH -- FORM

{% endif -%}
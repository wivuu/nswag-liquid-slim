{% if HasOperations -%}

{% if HasExtensionCode -%}
    {{ ExtensionCode }}
{% endif -%}

{% for operation in Operations | sort: HttpMethod -%}
{% comment %}
    PATH PARAMETER DECLARATIONS
{% endcomment -%}
{% if operation.PathParameters.first or operation.QueryParameters.first -%}
export type {{Class}}{{operation.OperationName}}Params = {
{% for parameter in operation.PathParameters -%}
    {{ parameter.VariableName }}{% if GenerateOptionalParameters and parameter.IsOptional %}?{% endif %}: {{ parameter.Type }}{{ parameter.TypePostfix }}
{% endfor -%}
{% for parameter in operation.QueryParameters -%}
    {{ parameter.VariableName }}{% if GenerateOptionalParameters and parameter.IsOptional %}?{% endif %}: {{ parameter.Type }}{{ parameter.TypePostfix }}
{% endfor -%}
};
{% endif -%}

{% comment %} 
    FORM PARAMETER DECLARATIONS
{% endcomment %}
{% if operation.HasFormParameters -%}
export type {{Class}}{{operation.OperationName}}Form = {
{% for parameter in operation.FormParameters -%}
    {{ parameter.VariableName }}{% if GenerateOptionalParameters and parameter.IsOptional %}?{% endif %}: {{ parameter.Type }}{{ parameter.TypePostfix }}
{% endfor -%}
};
{% endif -%}
{% endfor -%}

{% comment %} 
    DECLARE PATHS FOR ALL ROUTES
{% endcomment %}
declare interface I{{ Class }} {
{% for operation in Operations | sort: HttpMethod -%}
    {% template Client.Method.Documentation %}
    route(path: "/{{ operation.Path }}"{%if operation.PathParameters.first or operation.QueryParameters.first %}, params: {{Class}}{{operation.OperationName}}Params, leaveParams?: boolean{%endif%}): string;

{% endfor -%}
{% for operation in Operations | sort: HttpMethod -%}

    {% template Client.Method.Documentation %}
{% comment %}
    GET or HEAD or DELETE
{% endcomment -%}
{% if operation.HttpMethod == "get" or operation.HttpMethod == "head" or operation.HttpMethod == "delete" -%}
    {{ operation.ActualOperationName}}({%if operation.PathParameters.first or operation.QueryParameters.first %}params: {{Class}}{{operation.OperationName}}Params{%endif%}): Promise<{%if operation.ResultType == "void" %}Response{% else %}{{ operation.ResultType }}{%endif%}>,
{% else -%}
{% comment %}
    PUT or POST or PATCH
{% endcomment -%}
    {{ operation.ActualOperationName}}{% if operation.HasFormParameters -%}
    ({%if operation.PathParameters.first or operation.QueryParameters.first %}params: {{Class}}{{operation.OperationName}}Params{%else%}params: null{%endif%}, body: {{Class}}{{operation.OperationName}}Form | FormDataOf<{{Class}}{{operation.OperationName}}Form>): Promise<{%if operation.ResultType == "void" %}Response{% else %}{{ operation.ResultType }}{%endif%}>,
    {% else -%}({%if operation.PathParameters.first or operation.QueryParameters.first %}params: {{Class}}{{operation.OperationName}}Params{%elseif operation.HasContent%}params: null{%endif%}{%if operation.HasContent%}, body: {{operation.ContentParameter.Type}}{%endif%}): Promise<{%if operation.ResultType == "void" %}Response{% else %}{{ operation.ResultType }}{%endif%}>,
{% endif -%}

{% endif -%}
{% endfor -%}
}

export const {{ Class }}: I{{Class}} = {
    route: getRoute,
{% comment %}
    GET or HEAD or DELETE
{% endcomment -%}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "get" or operation.HttpMethod == "head" or operation.HttpMethod == "delete" -%}
    {{ operation.ActualOperationName}}: apiBase("{{operation.HttpMethod}}", "/{{ operation.Path }}"),
{% else -%}
{% comment %}
    PUT or POST or PATCH
{% endcomment -%}
    {{ operation.ActualOperationName}}: apiBase("{{operation.HttpMethod}}", "/{{ operation.Path }}"{% if operation.HasFormParameters %}, true{% endif %}),
{% endif -%}
{% endfor -%}
};

{% endif -%}
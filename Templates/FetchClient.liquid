{% if HasOperations -%}

{% if HasExtensionCode -%}
    {{ ExtensionCode }}
{% endif -%}

export module {{ Class }} {

{% for operation in Operations | sort: HttpMethod -%}
{% comment %}
    PATH PARAMETER DECLARATIONS
{% endcomment -%}
{% if operation.PathParameters.first -%}
type {{operation.OperationName}}Params = {
{% for parameter in operation.PathParameters -%}
    {{ parameter.VariableName }}{% if GenerateOptionalParameters and parameter.IsOptional %}?{% endif %}: {{ parameter.Type }}{{ parameter.TypePostfix }}
{% endfor -%}
{% for parameter in operation.QueryParameters -%}
    {{ parameter.VariableName }}{% if GenerateOptionalParameters and parameter.IsOptional %}?{% endif %}: {{ parameter.Type }}{{ parameter.TypePostfix }}
{% endfor -%}
};
{% endif -%}

{% comment %} 
    FORM PARAMETER DECLARATIONS
{% endcomment %}
{% if operation.HasFormParameters -%}
type {{operation.OperationName}}Form = {
{% for parameter in operation.FormParameters -%}
    {{ parameter.VariableName }}{% if GenerateOptionalParameters and parameter.IsOptional %}?{% endif %}: {{ parameter.Type }}{{ parameter.TypePostfix }}
{% endfor -%}
};
{% endif -%}
{% endfor -%}

{% comment %}
    GET
{% endcomment -%}
{% assign has_get = false %}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "get" -%}
{% assign has_get = true %}

{% template Client.Method.Documentation -%}
export function get(info: "/{{ operation.Path }}"{%if operation.PathParameters.first %}, params: {{operation.OperationName}}Params{%endif%}): Promise<{{ operation.ResultType }}>;

{% endif -%}
{% endfor -%}

{% if has_get -%}
/** GET {{Class}} */
export function get(info: string, params?: object): Promise<unknown> {
    return apiBase("GET", info, params);
}
{% endif -%}

{% comment %}
    HEAD
{% endcomment -%}
{% assign has_head = false %}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "head" -%}
{% assign has_head = true %}

{% template Client.Method.Documentation -%}
export function head(info: "/{{ operation.Path }}"{%if operation.PathParameters.first %}, params: {{operation.OperationName}}Params{%endif%}): Promise<{{ operation.ResultType }}>;

{% endif -%}
{% endfor -%}

{% if has_head -%}
/** HEAD {{Class}} */
export function head(info: string, params?: object): Promise<unknown> {
    return apiBase("HEAD", info, params);
}
{% endif -%}

{% comment %}
    DELETE
{% endcomment -%}
{% assign has_delete = false %}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "delete" -%}
{% assign has_delete = true %}

{% template Client.Method.Documentation -%}
export function del(info: "/{{ operation.Path }}"{%if operation.PathParameters.first %}, params: {{operation.OperationName}}Params{%endif%}): Promise<{{ operation.ResultType }}>;

{% endif -%}
{% endfor -%}

{% if has_delete -%}
/** DELETE {{Class}} */
export function del(info: string, params?: object): Promise<unknown> {
    return apiBase("DELETE", info, params);
}
{% endif -%}

{% comment %}
    PUT -- JSON
{% endcomment -%}
{% assign has_put_json = false -%}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "put" and operation.HasFormParameters == false -%}
{% assign has_put_json = true -%}

{% template Client.Method.Documentation -%}
export function put(info: "/{{ operation.Path }}"{%if operation.PathParameters.first %}, params: {{operation.OperationName}}Params{%elseif operation.HasContent%}, params: null{%endif%}{%if operation.HasContent%}, body: {{operation.ContentParameter.Type}}{%endif%}): Promise<{{ operation.ResultType }}>;

{% endif -%}
{% endfor -%}

{% if has_put_json -%}

/** PUT {{Class}} */
export function put(info: string, params?: object | null, body?: object): Promise<unknown> {
    return apiBase("PUT", info, params, JSON.stringify(body));
}
{% endif -%}

{% comment %}
    POST -- JSON
{% endcomment -%}
{% assign has_post_json = false -%}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "post" and operation.HasFormParameters == false -%}
{% assign has_post_json = true -%}

{% template Client.Method.Documentation -%}
export function post(info: "/{{ operation.Path }}"{%if operation.PathParameters.first %}, params: {{operation.OperationName}}Params{%elseif operation.HasContent%}, params: null{%endif%}{%if operation.HasContent%}, body: {{operation.ContentParameter.Type}}{%endif%}): Promise<{{ operation.ResultType }}>;

{% endif -%}
{% endfor -%}

{% if has_post_json -%}

/** POST {{Class}} */
export function post(info: string, params?: object | null, body?: object): Promise<unknown> {
    return apiBase("POST", info, params, JSON.stringify(body));
}
{% endif -%}

{% comment %}
    PATCH -- JSON
{% endcomment -%}
{% assign has_patch_json = false -%}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "patch" and operation.HasFormParameters == false -%}
{% assign has_patch_json = true -%}

{% template Client.Method.Documentation -%}
export function patch(info: "/{{ operation.Path }}"{%if operation.PathParameters.first %}, params: {{operation.OperationName}}Params{%elseif operation.HasContent%}, params: null{%endif%}{%if operation.HasContent%}, body: {{operation.ContentParameter.Type}}{%endif%}): Promise<{{ operation.ResultType }}>;

{% endif -%}
{% endfor -%}

{% if has_patch_json -%}

/** PATCH {{Class}} */
export function patch(info: string, params?: object | null, body?: object): Promise<unknown> {
    return apiBase("PATCH", info, params, JSON.stringify(body));
}
{% endif -%}

{% comment %}
    PUT -- FORM
{% endcomment -%}
{% assign has_put_form = false -%}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "put" and operation.HasFormParameters == true -%}
{% assign has_put_form = true -%}

{% template Client.Method.Documentation -%}
export function putForm(info: "/{{ operation.Path }}"{%if operation.PathParameters.first %}, params: {{operation.OperationName}}Params{%else%}, params: null{%endif%}, body: {{operation.OperationName}}Form): Promise<{{ operation.ResultType }}>;

{% endif -%}
{% endfor -%}

{% if has_put_form -%}

/** PUT {{Class}} */
export function putForm(info: string, params?: object | null, body?: object): Promise<unknown> {
    return apiBase("PUT", info, params, getFormData(body));
}
{% endif -%}

{% comment %}
    POST -- FORM
{% endcomment -%}
{% assign has_post_form = false -%}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "post" and operation.HasFormParameters == true -%}
{% assign has_post_form = true -%}

{% template Client.Method.Documentation -%}
export function postForm(info: "/{{ operation.Path }}"{%if operation.PathParameters.first %}, params: {{operation.OperationName}}Params{%else%}, params: null{%endif%}, body: {{operation.OperationName}}Form): Promise<{{ operation.ResultType }}>;

{% endif -%}
{% endfor -%}

{% if has_post_form -%}

/** POST {{Class}} */
export function postForm(info: string, params?: object | null, body?: object): Promise<unknown> {
    return apiBase("POST", info, params, getFormData(body));
}
{% endif -%}

{% comment %}
    PATCH -- FORM
{% endcomment -%}
{% assign has_patch_form = false -%}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "patch" and operation.HasFormParameters == true -%}
{% assign has_patch_form = true -%}

{% template Client.Method.Documentation -%}
export function patchForm(info: "/{{ operation.Path }}"{%if operation.PathParameters.first %}, params: {{operation.OperationName}}Params{%else%}, params: null{%endif%}, body: {{operation.OperationName}}Form): Promise<{{ operation.ResultType }}>;

{% endif -%}
{% endfor -%}

{% if has_patch_form -%}

/** PATCH {{Class}} */
export function patchForm(info: string, params?: object | null, body?: object): Promise<unknown> {
    return apiBase("PATCH", info, params, getFormData(body));
}
{% endif -%}

}

{% endif -%}
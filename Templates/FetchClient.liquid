{% if HasOperations -%}

{% if HasExtensionCode -%}
    {{ ExtensionCode }}
{% endif -%}

{% for operation in Operations | sort: HttpMethod -%}
{% comment %}
    PATH PARAMETER DECLARATIONS
{% endcomment -%}
{% if operation.PathParameters.first or operation.QueryParameters.first -%}
export type {{Class}}{{operation.OperationName}}Params = {
{% for parameter in operation.PathParameters -%}
    {{ parameter.VariableName }}{% if GenerateOptionalParameters and parameter.IsOptional %}?{% endif %}: {{ parameter.Type }}{{ parameter.TypePostfix }}
{% endfor -%}
{% for parameter in operation.QueryParameters -%}
    {{ parameter.VariableName }}{% if GenerateOptionalParameters and parameter.IsOptional %}?{% endif %}: {{ parameter.Type }}{{ parameter.TypePostfix }}
{% endfor -%}
};
{% endif -%}

{% comment %} 
    FORM PARAMETER DECLARATIONS
{% endcomment %}
{% if operation.HasFormParameters -%}
export type {{operation.OperationName}}Form = {
{% for parameter in operation.FormParameters -%}
    {{ parameter.VariableName }}{% if GenerateOptionalParameters and parameter.IsOptional %}?{% endif %}: {{ parameter.Type }}{{ parameter.TypePostfix }}
{% endfor -%}
};
{% endif -%}
{% endfor -%}

export const {{ Class }} = {

{% comment %}
    GET or HEAD or DELETE
{% endcomment -%}
{% assign has_get = false %}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "get" or operation.HttpMethod == "head" or operation.HttpMethod == "delete" -%}

    {% template Client.Method.Documentation %}
    {{ operation.ActualOperationName}}: apiBase("{{operation.HttpMethod}}", "/{{ operation.Path }}") as ({%if operation.PathParameters.first or operation.QueryParameters.first %}params: {{Class}}{{operation.OperationName}}Params{%endif%}) => Promise<{{ operation.ResultType }}>,

{% endif -%}
{% endfor -%}

{% comment %}
    PUT -- JSON
{% endcomment -%}
{% assign has_put_json = false -%}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "put" and operation.HasFormParameters == false -%}
{% assign has_put_json = true -%}

    {% template Client.Method.Documentation %}
    {{ operation.ActualOperationName}}: apiBase("{{operation.HttpMethod}}", "/{{ operation.Path }}") as ({%if operation.PathParameters.first or operation.QueryParameters.first %}params: {{Class}}{{operation.OperationName}}Params{%elseif operation.HasContent%}params: null{%endif%}{%if operation.HasContent%}, body: {{operation.ContentParameter.Type}}{%endif%}) => Promise<{{ operation.ResultType }}>,

{% endif -%}
{% endfor -%}

{% comment %}
    POST -- JSON
{% endcomment -%}
{% assign has_post_json = false -%}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "post" and operation.HasFormParameters == false -%}
{% assign has_post_json = true -%}

    {% template Client.Method.Documentation %}
    {{ operation.ActualOperationName}}: apiBase("{{operation.HttpMethod}}", "/{{ operation.Path }}") as ({%if operation.PathParameters.first or operation.QueryParameters.first %}params: {{Class}}{{operation.OperationName}}Params{%elseif operation.HasContent%}params: null{%endif%}{%if operation.HasContent%}, body: {{operation.ContentParameter.Type}}{%endif%}) => Promise<{{ operation.ResultType }}>,

{% endif -%}
{% endfor -%}

{% comment %}
    PATCH -- JSON
{% endcomment -%}
{% assign has_patch_json = false -%}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "patch" and operation.HasFormParameters == false -%}
{% assign has_patch_json = true -%}

    {% template Client.Method.Documentation %}
    {{operation.ActualOperationName}}: apiBase("{{operation.HttpMethod}}", "/{{ operation.Path }}") as ({%if operation.PathParameters.first or operation.QueryParameters.first %}params: {{Class}}{{operation.OperationName}}Params{%elseif operation.HasContent%}params: null{%endif%}{%if operation.HasContent%}, body: {{operation.ContentParameter.Type}}{%endif%}) => Promise<{{ operation.ResultType }}>,

{% endif -%}
{% endfor -%}

{% comment %}
    PUT -- FORM
{% endcomment -%}
{% assign has_put_form = false -%}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "put" and operation.HasFormParameters == true -%}
{% assign has_put_form = true -%}

    {% template Client.Method.Documentation %}
    {{operation.ActualOperationName}}: apiBase("{{operation.HttpMethod}}", "/{{ operation.Path }}") as ({%if operation.PathParameters.first or operation.QueryParameters.first %}params: {{Class}}{{operation.OperationName}}Params{%else%}params: null{%endif%}, body: {{operation.OperationName}}Form) => Promise<{{ operation.ResultType }}>,

{% endif -%}
{% endfor -%}

{% comment %}
    POST -- FORM
{% endcomment -%}
{% assign has_post_form = false -%}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "post" and operation.HasFormParameters == true -%}
{% assign has_post_form = true -%}

    {% template Client.Method.Documentation %}
    {{operation.ActualOperationName}}: apiBase("{{operation.HttpMethod}}", "/{{ operation.Path }}") as ({%if operation.PathParameters.first or operation.QueryParameters.first %}params: {{Class}}{{operation.OperationName}}Params{%else%}params: null{%endif%}, body: {{operation.OperationName}}Form) => Promise<{{ operation.ResultType }}>,

{% endif -%}
{% endfor -%}


{% comment %}
    PATCH -- FORM
{% endcomment -%}
{% assign has_patch_form = false -%}
{% for operation in Operations | sort: HttpMethod -%}
{% if operation.HttpMethod == "patch" and operation.HasFormParameters == true -%}
{% assign has_patch_form = true -%}

    {% template Client.Method.Documentation %}
    {{operation.ActualOperationName}}: apiBase("{{operation.HttpMethod}}", "/{{ operation.Path }}") as ({%if operation.PathParameters.first or operation.QueryParameters.first %}params: {{Class}}{{operation.OperationName}}Params{%else%}params: null{%endif%}, body: {{operation.OperationName}}Form) => Promise<{{ operation.ResultType }}>,

{% endif -%}
{% endfor -%}

};

{% endif -%}
